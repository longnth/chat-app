{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Drake Nguyen\\\\project\\\\test\\\\client\\\\src\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport socketClient from \"socket.io-client\";\nimport ChannelList from \"./ChannelList\";\nimport MessagesPanel from \"./MessagesPanel\";\nimport \"./chat.css\";\nconst SERVER = \"http://127.0.0.1:8080\";\nexport default function Chat() {\n  let socket = socketClient(SERVER);\n  socket.on(\"connection\", value => {\n    console.log(\"I am connected to server\");\n  });\n  socket.on(\"channel\", channels => setChannels(channels));\n  const [channels, setChannels] = useState([{\n    id: 1,\n    name: \"first\",\n    participants: 10\n  }]);\n  const [id, setId] = useState(0);\n\n  const loadChannel = async () => {\n    fetch(\"http://localhost:8080/getChannels\").then(async response => {\n      let data = await response.json();\n      setChannels(data.channels);\n    });\n  };\n\n  const handleChannelSelect = id => {\n    setId(id);\n    socket.emit(\"channel-join\", id, ack => {});\n  };\n\n  useEffect(() => {\n    if (channels.length < 2) loadChannel();\n    console.log(channels);\n  }, [channels]); // useEffect(() => {}, [channels]);\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ChannelList, {\n    channels: channels,\n    onSelectChannel: handleChannelSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MessagesPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Drake Nguyen/project/test/client/src/Chat/Chat.js"],"names":["React","useState","useEffect","socketClient","ChannelList","MessagesPanel","SERVER","Chat","socket","on","value","console","log","channels","setChannels","id","name","participants","setId","loadChannel","fetch","then","response","data","json","handleChannelSelect","emit","ack","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AAEA,OAAO,YAAP;AAEA,MAAMC,MAAM,GAAG,uBAAf;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAIC,MAAM,GAAGL,YAAY,CAACG,MAAD,CAAzB;AACAE,EAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAyBC,KAAD,IAAW;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD,GAFD;AAIAJ,EAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAsBI,QAAD,IAAcC,WAAW,CAACD,QAAD,CAA9C;AAEA,QAAM,CAACA,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,CACvC;AACEc,IAAAA,EAAE,EAAE,CADN;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,YAAY,EAAE;AAHhB,GADuC,CAAD,CAAxC;AAOA,QAAM,CAACF,EAAD,EAAKG,KAAL,IAAcjB,QAAQ,CAAC,CAAD,CAA5B;;AAEA,QAAMkB,WAAW,GAAG,YAAY;AAC9BC,IAAAA,KAAK,CAAC,mCAAD,CAAL,CAA2CC,IAA3C,CAAgD,MAAOC,QAAP,IAAoB;AAClE,UAAIC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAAjB;AACAV,MAAAA,WAAW,CAACS,IAAI,CAACV,QAAN,CAAX;AACD,KAHD;AAID,GALD;;AAOA,QAAMY,mBAAmB,GAAIV,EAAD,IAAQ;AAClCG,IAAAA,KAAK,CAACH,EAAD,CAAL;AACAP,IAAAA,MAAM,CAACkB,IAAP,CAAY,cAAZ,EAA4BX,EAA5B,EAAiCY,GAAD,IAAS,CAAE,CAA3C;AACD,GAHD;;AAKAzB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIW,QAAQ,CAACe,MAAT,GAAkB,CAAtB,EAAyBT,WAAW;AACpCR,IAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACD,GAHQ,EAGN,CAACA,QAAD,CAHM,CAAT,CA7B6B,CAkC7B;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAEA,QAAvB;AAAiC,IAAA,eAAe,EAAEY,mBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AAMD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport socketClient from \"socket.io-client\";\r\nimport ChannelList from \"./ChannelList\";\r\nimport MessagesPanel from \"./MessagesPanel\";\r\n\r\nimport \"./chat.css\";\r\n\r\nconst SERVER = \"http://127.0.0.1:8080\";\r\n\r\nexport default function Chat() {\r\n  let socket = socketClient(SERVER);\r\n  socket.on(\"connection\", (value) => {\r\n    console.log(\"I am connected to server\");\r\n  });\r\n\r\n  socket.on(\"channel\", (channels) => setChannels(channels));\r\n\r\n  const [channels, setChannels] = useState([\r\n    {\r\n      id: 1,\r\n      name: \"first\",\r\n      participants: 10,\r\n    },\r\n  ]);\r\n  const [id, setId] = useState(0);\r\n\r\n  const loadChannel = async () => {\r\n    fetch(\"http://localhost:8080/getChannels\").then(async (response) => {\r\n      let data = await response.json();\r\n      setChannels(data.channels);\r\n    });\r\n  };\r\n\r\n  const handleChannelSelect = (id) => {\r\n    setId(id);\r\n    socket.emit(\"channel-join\", id, (ack) => {});\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (channels.length < 2) loadChannel();\r\n    console.log(channels);\r\n  }, [channels]);\r\n\r\n  // useEffect(() => {}, [channels]);\r\n\r\n  return (\r\n    <div className=\"chat-app\">\r\n      <ChannelList channels={channels} onSelectChannel={handleChannelSelect} />\r\n      <MessagesPanel />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}